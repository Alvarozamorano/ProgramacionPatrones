/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import bibliotecacafeteria.Biblioteca;
import PersonalUniversidad.PersonalUniversidad;
import SingletonProxyServidor.SingletonProxyServidor;
import SingletonProxyServidor.TipoArchivo;
import StatePrestamo.EstadoPendiente;
import StatePrestamo.Prestamo;
import java.awt.Color;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Álvaro Zamorano
 */
public class VentanaConcederPrestamo extends javax.swing.JFrame {

    private VentanaBibliotecario padre;

    private PersonalUniversidad usuario;

    private Biblioteca biblioteca;

    /**
     * Creates new form VentanaConcederPrestamo
     */
    public VentanaConcederPrestamo(VentanaBibliotecario ventana, PersonalUniversidad usuario) throws IOException, ClassNotFoundException {
        padre = ventana;
        padre.setVisible(false);
        this.setVisible(true);
        initComponents();
        this.getContentPane().setBackground(Color.orange);
        this.usuario = usuario;
        String biblio = usuario.getRolBibliotecario().getBiblioteca();
        biblioteca = (Biblioteca) SingletonProxyServidor.getInstancia().cargar_archivo(TipoArchivo.BIBLIOTECA, biblio);
        jTextAreaPrestamos.setText(biblioteca.obtienePrestamosPendientes());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButtonConceder = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaPrestamos = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldId = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SISTEMA CAFETERIA Y BIBLIOTECA");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 18)); // NOI18N
        jLabel1.setText("Introduce id de Préstamo a conceder:");

        jButtonConceder.setBackground(new java.awt.Color(0, 0, 0));
        jButtonConceder.setForeground(new java.awt.Color(255, 255, 0));
        jButtonConceder.setText("Conceder");
        jButtonConceder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConcederActionPerformed(evt);
            }
        });

        jTextAreaPrestamos.setColumns(20);
        jTextAreaPrestamos.setRows(5);
        jScrollPane1.setViewportView(jTextAreaPrestamos);

        jLabel2.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 14)); // NOI18N
        jLabel2.setText("Préstamos a conceder:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(47, 47, 47)
                        .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                        .addComponent(jButtonConceder)
                        .addGap(26, 26, 26))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButtonConceder)
                    .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        padre.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    /**
     * Concede el prestamo con el id del producto de biblioteca al usuario
     *
     * @param evt
     */
    private void jButtonConcederActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConcederActionPerformed
        try {
            String ID = jTextFieldId.getText();
            Prestamo prestamo = biblioteca.contienePrestamoConcedido(ID);
            if (prestamo != null) {
                int indice = biblioteca.devIndicePrestamo(prestamo);
                String dni = prestamo.getPersona().getDni();
                PersonalUniversidad persona = (PersonalUniversidad) SingletonProxyServidor.getInstancia().cargar_archivo(TipoArchivo.PERSONAL_UNIVERSIDAD, dni);
                Prestamo p = devuelvePrestamo(persona, ID);
                p.concederPrestamo();
                biblioteca.getPrestamos().set(indice, p);
                SingletonProxyServidor.getInstancia().guardar_archivo(persona);
                SingletonProxyServidor.getInstancia().guardar_archivo(biblioteca);
                jTextAreaPrestamos.setText(biblioteca.obtienePrestamosPendientes());
                JOptionPane.showMessageDialog(this, "Prestamo Concedido", "Mensaje de Información", JOptionPane.INFORMATION_MESSAGE);

            } else {
                JOptionPane.showMessageDialog(this, "ERROR: ID no disponible", "Mensaje de Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (IOException ex) {
            Logger.getLogger(VentanaConcederPrestamo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VentanaConcederPrestamo.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButtonConcederActionPerformed

    /**
     * Devuelve el prestamo en estado pendiente de la persona con el id del
     * producto pasado por parametro
     *
     * @param persona
     * @param id Id del producto de biblioteca del prestamo
     * @return Prestamo de la persona con el id del producto pasado por
     * parametro
     */
    private Prestamo devuelvePrestamo(PersonalUniversidad persona, String id) {
        Prestamo p = null;
        ArrayList<Prestamo> prestamos = persona.getPrestamos();
        for (int i = 0; i < prestamos.size(); i++) {
            if (prestamos.get(i).getEstadoPrestamo() instanceof EstadoPendiente
                    && prestamos.get(i).getProductoBiblioteca().getIdeintificador().equals(id)) {
                p = prestamos.get(i);
            }
        }
        return p;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonConceder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaPrestamos;
    private javax.swing.JTextField jTextFieldId;
    // End of variables declaration//GEN-END:variables
}
