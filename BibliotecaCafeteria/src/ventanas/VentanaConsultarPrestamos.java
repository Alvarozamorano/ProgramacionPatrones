/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import FactPublicaciones.Publicacion;
import bibliotecacafeteria.Biblioteca;
import PersonalUniversidad.PersonalUniversidad;
import SingletonProxyServidor.SingletonProxyServidor;
import SingletonProxyServidor.TipoArchivo;
import StatePrestamo.EstadoConcedido;
import StatePrestamo.EstadoPendiente;
import StatePrestamo.Prestamo;
import java.awt.Color;
import java.io.IOException;
import java.util.ArrayList;
import java.util.ListIterator;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class VentanaConsultarPrestamos extends javax.swing.JFrame {

    /**
     * Atributo que guarda la ventana principal
     */
    private JFrame padre;
    /**
     * Atributo que guarda los jugadores registrados en un ArrayList
     */
    private ArrayList<Prestamo> prestamos;
    /**
     * Iterador para recorrer el ArrayList en ambas direcciones
     */
    private ListIterator li;
    ; 
    /**Referencia a un objeto de tipo jugador registrado del ArrayList*/
    private PersonalUniversidad usuario;

    private Prestamo prestamo;

    /**
     * Creates new form VentanaConsultar
     */
    public VentanaConsultarPrestamos(JFrame ventana, PersonalUniversidad usuario, boolean bibliotecario) throws IOException, ClassNotFoundException {
        padre = ventana;
        padre.setVisible(false);
        this.setVisible(true);
        initComponents();
        this.getContentPane().setBackground(Color.orange);
        this.usuario = usuario;
        if (bibliotecario) {
            String biblio = usuario.getRolBibliotecario().getBiblioteca();
            Biblioteca biblioteca = (Biblioteca) SingletonProxyServidor.getInstancia().cargar_archivo(TipoArchivo.BIBLIOTECA, biblio);
            prestamos = biblioteca.getPrestamos();
        } else {
            prestamos = usuario.getPrestamos();
        }
        li = prestamos.listIterator();
        panelDatosPrestamos1.setBackground(Color.ORANGE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButtonAnt = new javax.swing.JButton();
        jButtonSig = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        panelDatosPrestamos1 = new ventanas.PanelDatosPrestamos();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SISTEMA CAFETERIA Y BIBLIOTECA");
        setPreferredSize(new java.awt.Dimension(650, 500));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("CONSULTA PRESTAMOS");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(200, 10, 210, 22);

        jButtonAnt.setBackground(new java.awt.Color(0, 0, 0));
        jButtonAnt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonAnt.setForeground(new java.awt.Color(255, 255, 0));
        jButtonAnt.setText("Ant");
        jButtonAnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAntActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonAnt);
        jButtonAnt.setBounds(40, 40, 53, 23);

        jButtonSig.setBackground(new java.awt.Color(0, 0, 0));
        jButtonSig.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonSig.setForeground(new java.awt.Color(255, 255, 0));
        jButtonSig.setText("Sig");
        jButtonSig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSigActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSig);
        jButtonSig.setBounds(520, 40, 49, 23);
        getContentPane().add(jLabel8);
        jLabel8.setBounds(618, 458, 0, 0);
        getContentPane().add(panelDatosPrestamos1);
        panelDatosPrestamos1.setBounds(120, 60, 360, 410);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * resenta los datos de un prestamo en el panel de datos
     * @param pre Prestamo a consultar
     */
    private void presenta(Prestamo pre) {
        String fechaCreacion, fechaDevolucion, fechaDevU, dias, estado;
        fechaCreacion = devuelveFechaPrestamo(pre);
        fechaDevolucion = devuelveFechaDevolucion(pre);
        fechaDevU = devuelveFechaDevolucionU(pre);
        dias = devuelveDiasHoras(pre);
        estado = devuelveEstado(pre);
        panelDatosPrestamos1.getjTextFieldProducto().setText("Id Producto: "
                + pre.getProductoBiblioteca().getIdeintificador() + ", DNI Persona: " + pre.getPersona().getDni());
        panelDatosPrestamos1.getjTextFieldFPrestamo().setText(fechaCreacion);
        panelDatosPrestamos1.getjTextFieldFDevolucion().setText(fechaDevolucion);
        panelDatosPrestamos1.getjTextFieldFDevolucionU().setText(fechaDevU);
        panelDatosPrestamos1.getjTextFieldDias().setText(dias);
        panelDatosPrestamos1.getjTextFieldEstado().setText(estado);
    }

    private String devuelveFechaPrestamo(Prestamo p) {
        String fechaCreacion;
        if (p.getFechaCreacionPrestamo() == null) {
            fechaCreacion = "No se ha concedido aún";
        } else {
            fechaCreacion = p.getFechaCreacionPrestamo().toString();
        }
        return fechaCreacion;
    }

    private String devuelveFechaDevolucion(Prestamo p) {
        String fechaDevolucion;
        if (p.getFechaDevolucionPrestamo() == null) {
            fechaDevolucion = "No se ha concedido aún";
        } else {
            fechaDevolucion = p.getFechaDevolucionPrestamo().toString();
        }
        return fechaDevolucion;
    }

    private String devuelveFechaDevolucionU(Prestamo p) {
        String fechaDevolucion;
        if (p.getFechaDevolucionPersona() == null) {
            fechaDevolucion = "No se ha devuelto aún";
        } else {
            fechaDevolucion = p.getFechaDevolucionPersona().toString();
        }
        return fechaDevolucion;
    }

    private String devuelveDiasHoras(Prestamo p) {
        String diasHoras;
        if (p.getProductoBiblioteca() instanceof Publicacion) {
            diasHoras = p.getDiasPermitidos() + " dias";
        } else {
            diasHoras = p.getHorasPermitidas() + " horas";
        }
        return diasHoras;
    }

    private String devuelveEstado(Prestamo p) {
        String estado;
        if (p.getEstadoPrestamo() instanceof EstadoPendiente) {
            estado = "Pendiente";
        } else if (p.getEstadoPrestamo() instanceof EstadoConcedido) {
            estado = "Concedido";
        } else {
            estado = "Devuelto";
        }
        return estado;
    }

    /**
     * Evento para consultar los datos del siguiente prestamo del ArrayList
     */
    private void jButtonSigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSigActionPerformed
        //Comprobamos el rango del ArrayList...
        if (li.hasNext()) {
            prestamo = (Prestamo) li.next();
            if (prestamo != null) {
                presenta(prestamo);
            } else {
                JOptionPane.showMessageDialog(this, "No hay prestamos.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonSigActionPerformed

    /**
     * Evento para consultar los datos del anterior prestamo del ArrayList
     */
    private void jButtonAntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAntActionPerformed
        //Comprobamos el rango del ArrayList...
        if (li.hasPrevious()) {
            prestamo = (Prestamo) li.previous();
            if (prestamo != null) {
                presenta(prestamo);
            } else {
                JOptionPane.showMessageDialog(this, "No hay prestamos.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonAntActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        padre.setVisible(true);
    }//GEN-LAST:event_formWindowClosed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnt;
    private javax.swing.JButton jButtonSig;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel8;
    private ventanas.PanelDatosPrestamos panelDatosPrestamos1;
    // End of variables declaration//GEN-END:variables
}
