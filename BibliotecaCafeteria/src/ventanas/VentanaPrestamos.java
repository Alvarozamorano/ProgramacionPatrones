/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import AdapterTemplateMethod_SingletonProxyServidor.AdaptadorServidor;
import AdapterTemplateMethod_SingletonProxyServidor.AdaptadorServidorProductoBiblioteca;
import BridgeBuscarPublicaciones.ProductosAbs;
import BridgeBuscarPublicaciones.ProductoImpPubAutor;
import BridgeBuscarPublicaciones.ProductoImpPubFecha;
import BridgeBuscarPublicaciones.ProductoImpPubMateria;
import BridgeBuscarPublicaciones.ProductoImpPubTitulo;
import BridgeBuscarPublicaciones.ProductoImpSala;
import FactPublicaciones.iProductoBiblioteca;
import bibliotecacafeteria.Biblioteca;
import PersonalUniversidad.PersonalUniversidad;
import SingletonProxyServidor.SingletonProxyServidor;
import SingletonProxyServidor.TipoArchivo;
import StatePrestamo.EstadoConcedido;
import StatePrestamo.Prestamo;
import StrategyOrdenacion.Contexto;
import StrategyOrdenacion.Estrategia;
import StrategyOrdenacion.EstrategiaConcretaAutor;
import StrategyOrdenacion.EstrategiaConcretaFecha;
import StrategyOrdenacion.EstrategiaConcretaMateria;
import StrategyOrdenacion.EstrategiaConcretaTitulo;
import bibliotecacafeteria.UsuarioException;
import java.awt.Color;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Álvaro Zamorano
 */
public class VentanaPrestamos extends javax.swing.JFrame {

    private VentanaUsuario padre;

    private PersonalUniversidad usuario;

    AdaptadorServidor adaptadorServidorPublicacion;

    HashMap mapProductosBiblioteca;

    ArrayList listaProductosBiblioteca;

    /**
     * Creates new form VentanaPrestamos
     */
    public VentanaPrestamos(VentanaUsuario ventana, PersonalUniversidad usuario) throws IOException, ClassNotFoundException {
        padre = ventana;
        padre.setVisible(false);
        this.setVisible(true);
        initComponents();
        this.getContentPane().setBackground(Color.orange);
        this.usuario = (PersonalUniversidad) SingletonProxyServidor.getInstancia().cargar_archivo(TipoArchivo.PERSONAL_UNIVERSIDAD, usuario.getDni());
        jLabelNombre.setText(usuario.getNombre());
        jLabelApellidos.setText(usuario.getApellidos());
        adaptadorServidorPublicacion = new AdaptadorServidorProductoBiblioteca();
        mapProductosBiblioteca = adaptadorServidorPublicacion.obtener_todo_dato();
        listaProductosBiblioteca = new ArrayList<iProductoBiblioteca>(mapProductosBiblioteca.values());
        notificar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelNombre = new javax.swing.JLabel();
        jLabelApellidos = new javax.swing.JLabel();
        jButtonBuscar = new javax.swing.JButton();
        jComboBoxFiltro = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jButtonConsultaPrestamos = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldFiltro = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaPublicaciones = new javax.swing.JTextArea();
        jButtonOrdAsc = new javax.swing.JButton();
        jButtonOrdDes = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldID = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButtonPrestar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldIDDev = new javax.swing.JTextField();
        jButtonDevolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SISTEMA CAFETERIA Y BIBLIOTECA");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setText("Nombre:");

        jLabel2.setText("Apellidos:");

        jLabelNombre.setText("Nombre");

        jLabelApellidos.setText("Apellidos");

        jButtonBuscar.setBackground(new java.awt.Color(0, 0, 0));
        jButtonBuscar.setForeground(new java.awt.Color(255, 255, 0));
        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jComboBoxFiltro.setBackground(new java.awt.Color(0, 0, 0));
        jComboBoxFiltro.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 14)); // NOI18N
        jComboBoxFiltro.setForeground(new java.awt.Color(255, 255, 0));
        jComboBoxFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Autor", "Fecha", "Materia", "Titulo", "Sala" }));

        jLabel3.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 18)); // NOI18N
        jLabel3.setText("Consultar Préstamos -");

        jButtonConsultaPrestamos.setBackground(new java.awt.Color(0, 0, 0));
        jButtonConsultaPrestamos.setForeground(new java.awt.Color(255, 255, 0));
        jButtonConsultaPrestamos.setText("Acceder");
        jButtonConsultaPrestamos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultaPrestamosActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 18)); // NOI18N
        jLabel4.setText("Búsqueda Publicaciones:");

        jTextAreaPublicaciones.setColumns(20);
        jTextAreaPublicaciones.setRows(5);
        jScrollPane1.setViewportView(jTextAreaPublicaciones);

        jButtonOrdAsc.setBackground(new java.awt.Color(0, 0, 0));
        jButtonOrdAsc.setForeground(new java.awt.Color(255, 255, 0));
        jButtonOrdAsc.setText("Ordenar Asc");
        jButtonOrdAsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdAscActionPerformed(evt);
            }
        });

        jButtonOrdDes.setBackground(new java.awt.Color(0, 0, 0));
        jButtonOrdDes.setForeground(new java.awt.Color(255, 255, 0));
        jButtonOrdDes.setText("Ordenar Des");
        jButtonOrdDes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdDesActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 18)); // NOI18N
        jLabel5.setText("Devolver Préstamo-");

        jLabel6.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 10)); // NOI18N
        jLabel6.setText("ID:");

        jButtonPrestar.setBackground(new java.awt.Color(0, 0, 0));
        jButtonPrestar.setForeground(new java.awt.Color(255, 255, 0));
        jButtonPrestar.setText("Prestar");
        jButtonPrestar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrestarActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 18)); // NOI18N
        jLabel7.setText("Realizar Préstamo-");

        jLabel8.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 10)); // NOI18N
        jLabel8.setText("ID:");

        jButtonDevolver.setBackground(new java.awt.Color(0, 0, 0));
        jButtonDevolver.setForeground(new java.awt.Color(255, 255, 0));
        jButtonDevolver.setText("Devolver");
        jButtonDevolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDevolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(395, 395, 395)
                        .addComponent(jLabel1)
                        .addGap(57, 57, 57)
                        .addComponent(jLabelNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(395, 395, 395)
                        .addComponent(jLabel2)
                        .addGap(52, 52, 52)
                        .addComponent(jLabelApellidos))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel3)
                        .addGap(45, 45, 45)
                        .addComponent(jButtonConsultaPrestamos))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jComboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonBuscar)
                        .addGap(6, 6, 6)
                        .addComponent(jButtonOrdAsc)
                        .addGap(10, 10, 10)
                        .addComponent(jButtonOrdDes))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(47, 47, 47)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldIDDev)))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonPrestar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonDevolver, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabelNombre))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabelApellidos))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jButtonConsultaPrestamos))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonPrestar)))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldIDDev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(jLabel5))
                    .addComponent(jButtonDevolver))
                .addGap(22, 22, 22)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonBuscar)
                    .addComponent(jButtonOrdAsc)
                    .addComponent(jButtonOrdDes)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Se muestra la ventana de consultar prestamos del usuario
     *
     * @param evt
     */
    private void jButtonConsultaPrestamosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultaPrestamosActionPerformed
        try {
            VentanaConsultarPrestamos vc = new VentanaConsultarPrestamos(this, usuario, false);
        } catch (IOException ex) {
            Logger.getLogger(VentanaPrestamos.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VentanaPrestamos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonConsultaPrestamosActionPerformed

    /**
     * Se muestran las publicaciones ordenadas ascendentemente según el filtro
     * del jComboBox
     *
     * @param evt
     */
    private void jButtonOrdAscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdAscActionPerformed
        String filtro = String.valueOf(jComboBoxFiltro.getSelectedItem());
        Estrategia est;
        Contexto contexto = new Contexto(listaProductosBiblioteca);;
        switch (filtro) {
            case "Autor":
                est = new EstrategiaConcretaAutor();
                //El contexto
                contexto.setEstrategia(est);
                jTextAreaPublicaciones.setText(contexto.ejecutaEstrategia("asc"));
                break;
            case "Fecha":
                est = new EstrategiaConcretaFecha();
                //El contexto
                contexto.setEstrategia(est);
                jTextAreaPublicaciones.setText(contexto.ejecutaEstrategia("asc"));
                break;
            case "Materia":
                est = new EstrategiaConcretaMateria();
                //El contexto
                contexto.setEstrategia(est);
                contexto.ejecutaEstrategia("asc");
                jTextAreaPublicaciones.setText(contexto.ejecutaEstrategia("asc"));
                break;
            case "Titulo":
                est = new EstrategiaConcretaTitulo();
                //El contexto
                contexto.setEstrategia(est);
                contexto.ejecutaEstrategia("asc");
                jTextAreaPublicaciones.setText(contexto.ejecutaEstrategia("asc"));
                break;
            case "Sala":
                break;
            default:
                break;
        }
    }//GEN-LAST:event_jButtonOrdAscActionPerformed

    /**
     * Se muestran las publicaciones ordenadas descendentemente según el filtro
     * del jComboBox
     *
     * @param evt
     */
    private void jButtonOrdDesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdDesActionPerformed
        String filtro = String.valueOf(jComboBoxFiltro.getSelectedItem());
        Estrategia est;
        Contexto contexto = new Contexto(listaProductosBiblioteca);;
        switch (filtro) {
            case "Autor":
                est = new EstrategiaConcretaAutor();
                //El contexto
                contexto.setEstrategia(est);
                jTextAreaPublicaciones.setText(contexto.ejecutaEstrategia("des"));
                break;
            case "Fecha":
                est = new EstrategiaConcretaFecha();
                //El contexto
                contexto.setEstrategia(est);
                jTextAreaPublicaciones.setText(contexto.ejecutaEstrategia("des"));
                break;
            case "Materia":
                est = new EstrategiaConcretaMateria();
                //El contexto
                contexto.setEstrategia(est);
                contexto.ejecutaEstrategia("asc");
                jTextAreaPublicaciones.setText(contexto.ejecutaEstrategia("des"));
                break;
            case "Titulo":
                est = new EstrategiaConcretaTitulo();
                //El contexto
                contexto.setEstrategia(est);
                contexto.ejecutaEstrategia("asc");
                jTextAreaPublicaciones.setText(contexto.ejecutaEstrategia("des"));
                break;
            case "Sala":
                break;
            default:
                break;
        }
    }//GEN-LAST:event_jButtonOrdDesActionPerformed

    /**
     * Se genera un prestamo con estado pendiente del id del producto de la
     * biblioteca
     *
     * @param evt
     */
    private void jButtonPrestarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrestarActionPerformed
        if (jTextFieldID.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "ERROR: Faltan datos", "Mensaje de Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Date fechaActual = new Date();
        if (usuario.getFechaFinMulta() == null || usuario.getFechaFinMulta().before(fechaActual)) {
            usuario.setFechaFinMulta(null);
            try {
                String id = jTextFieldID.getText();

                if (mapProductosBiblioteca.containsKey(id)) {
                    iProductoBiblioteca producto = (iProductoBiblioteca) mapProductosBiblioteca.get(id);
                    if (producto.estaDisponible()) {
                        Prestamo prestamo = new Prestamo(usuario, producto);
                        Biblioteca biblio = prestamo.getBiblioteca();
                        SingletonProxyServidor.getInstancia().guardar_archivo(usuario);
                        SingletonProxyServidor.getInstancia().guardar_archivo(producto);
                        SingletonProxyServidor.getInstancia().guardar_archivo(biblio);
                        JOptionPane.showMessageDialog(this, "Prestamo de producto con id " + id + " en estado pendiente.",
                                "Mensaje informativo", JOptionPane.INFORMATION_MESSAGE);
                        mapProductosBiblioteca = adaptadorServidorPublicacion.obtener_todo_dato();
                        listaProductosBiblioteca = new ArrayList<iProductoBiblioteca>(mapProductosBiblioteca.values());
                    } else {
                        throw new UsuarioException(UsuarioException.PRODUCTO_NO_DISPONIBLE);
                    }
                } else {
                    throw new UsuarioException(UsuarioException.ID_INCORRECTO);
                }
            } catch (UsuarioException nm) {
                JOptionPane.showMessageDialog(this, nm.getMessage(), "Mensaje", JOptionPane.ERROR_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.toString(), "Mensaje", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "ERROR: Tiene multa hasta el dia" + usuario.getFechaFinMulta(), "Mensaje de Error", JOptionPane.ERROR_MESSAGE);
            return;
        }


    }//GEN-LAST:event_jButtonPrestarActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        padre.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    /**
     * Se muestra los productos de la biblioteca según el criterio de búsqueda
     *
     * @param evt
     */
    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        String busqueda = jTextFieldFiltro.getText();
        if (busqueda.equals("")) {
            JOptionPane.showMessageDialog(this, "ERROR: Faltan datos", "Mensaje de Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String filtro = String.valueOf(jComboBoxFiltro.getSelectedItem());

        mapProductosBiblioteca = adaptadorServidorPublicacion.obtener_todo_dato();
        listaProductosBiblioteca
                = new ArrayList<iProductoBiblioteca>(mapProductosBiblioteca.values());

        ProductosAbs abst = new ProductosAbs();

        switch (filtro) {
            case "Autor":
                ProductoImpPubAutor imp = new ProductoImpPubAutor(listaProductosBiblioteca);
                abst.setImp(imp);
                jTextAreaPublicaciones.setText(abst.busca(busqueda));
                break;
            case "Fecha":
                SimpleDateFormat f1 = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
                try {
                    Date fecha = f1.parse(busqueda);
                    ProductoImpPubFecha imp2 = new ProductoImpPubFecha(listaProductosBiblioteca);
                    abst.setImp(imp2);
                    jTextAreaPublicaciones.setText(abst.busca(fecha));
                } catch (ParseException ex) {
                    Logger.getLogger(VentanaPrestamos.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case "Materia":
                ProductoImpPubMateria imp3 = new ProductoImpPubMateria(listaProductosBiblioteca);
                abst.setImp(imp3);
                jTextAreaPublicaciones.setText(abst.busca(busqueda));
                break;
            case "Titulo":
                ProductoImpPubTitulo imp4 = new ProductoImpPubTitulo(listaProductosBiblioteca);
                abst.setImp(imp4);
                jTextAreaPublicaciones.setText(abst.busca(busqueda));
                break;
            case "Sala":
                ProductoImpSala imp5 = new ProductoImpSala(listaProductosBiblioteca);
                abst.setImp(imp5);
                int filtroCapacidad = Integer.parseInt(busqueda);
                jTextAreaPublicaciones.setText(abst.busca(filtroCapacidad));
                break;
            default:
                break;
        }
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    /**
     * El usuario devuelve un prestamo con estado concedido del id del producto
     * a devolver
     *
     * @param evt
     */
    private void jButtonDevolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDevolverActionPerformed
        if (jTextFieldIDDev.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "ERROR: Faltan datos", "Mensaje de Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String id = jTextFieldIDDev.getText();
        iProductoBiblioteca producto;
        try {
            if (mapProductosBiblioteca.containsKey(id)) {
                if (contieneProductoDevolver(id)) {
                    Prestamo prestamo = devuelvePrestamo(id);
                    if (prestamo.getEstadoPrestamo() instanceof EstadoConcedido) {
                        try {
                            prestamo.devolverPrestamo();
                            producto = prestamo.getProductoBiblioteca();
                            Biblioteca biblio = prestamo.getBiblioteca();
                            SingletonProxyServidor.getInstancia().guardar_archivo(usuario);
                            SingletonProxyServidor.getInstancia().guardar_archivo(producto);
                            SingletonProxyServidor.getInstancia().guardar_archivo(biblio);
                            JOptionPane.showMessageDialog(this, "Prestamo de producto con id " + id + " devuelto.",
                                    "Mensaje informativo", JOptionPane.INFORMATION_MESSAGE);
                            mapProductosBiblioteca = adaptadorServidorPublicacion.obtener_todo_dato();
                            listaProductosBiblioteca = new ArrayList<iProductoBiblioteca>(mapProductosBiblioteca.values());
                        } catch (IOException ex) {
                            Logger.getLogger(VentanaPrestamos.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "ERROR: Prestamo con estado incorrecto", "Mensaje de Error", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "ERROR: No tienes el producto prestado", "Mensaje de Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

            } else {
                throw new UsuarioException(UsuarioException.ID_INCORRECTO);
            }
        } catch (UsuarioException nm) {
            JOptionPane.showMessageDialog(this, nm.getMessage(), "Mensaje", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.toString(), "Mensaje", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButtonDevolverActionPerformed

    private boolean contieneProductoDevolver(String id) {
        boolean contieneProducto = false;
        ArrayList<Prestamo> prestamosUsuario = usuario.getPrestamos();
        for (int i = 0; i < prestamosUsuario.size(); i++) {
            if (prestamosUsuario.get(i).getProductoBiblioteca().getIdeintificador().equals(id)) {
                contieneProducto = true;
            }
        }
        return contieneProducto;
    }

    private Prestamo devuelvePrestamo(String id) {
        Prestamo p = null;
        ArrayList<Prestamo> prestamosUsuario = usuario.getPrestamos();
        for (int i = 0; i < prestamosUsuario.size(); i++) {
            if (prestamosUsuario.get(i).getProductoBiblioteca().getIdeintificador().equals(id)) {
                p = prestamosUsuario.get(i);
            }
        }
        return p;
    }

    private void notificar() {
        ArrayList<Prestamo> prestamos = usuario.getPrestamos();
        for (int i = 0; i < prestamos.size(); i++) {
            if (prestamos.get(i).getEstadoPrestamo() instanceof EstadoConcedido) {
                prestamos.get(i).addObserver(usuario);
                prestamos.get(i).verMulta();
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonConsultaPrestamos;
    private javax.swing.JButton jButtonDevolver;
    private javax.swing.JButton jButtonOrdAsc;
    private javax.swing.JButton jButtonOrdDes;
    private javax.swing.JButton jButtonPrestar;
    private javax.swing.JComboBox<String> jComboBoxFiltro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelApellidos;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaPublicaciones;
    private javax.swing.JTextField jTextFieldFiltro;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldIDDev;
    // End of variables declaration//GEN-END:variables
}
